// <auto-generated />
using System;
using Api.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Persistencia.Migraciones
{
    [DbContext(typeof(PecezuelosDbContext))]
    [Migration("20240315191325_DataSeending")]
    partial class DataSeending
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Aplicacion.Dominio.Carrito", b =>
                {
                    b.Property<byte>("IDCarrito")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("IDCliente")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("IDCarrito");

                    b.ToTable("Carrito");

                    b.HasData(
                        new
                        {
                            IDCarrito = (byte)2,
                            IDCliente = (byte)2,
                            PrecioTotal = 1000
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Cliente", b =>
                {
                    b.Property<byte>("ID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("CarritoIDCarrito")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("CarritoIDCarrito");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            ID = (byte)2,
                            Contraseña = "12encotrasenia",
                            Email = "Josep123@gmail.com",
                            Nombre = "Josep"
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Comentario", b =>
                {
                    b.Property<byte>("IdComentario")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("IDCliente")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("ProductoID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Valoracion")
                        .HasColumnType("int");

                    b.HasKey("IdComentario");

                    b.HasIndex("ProductoID");

                    b.ToTable("Comentario");

                    b.HasData(
                        new
                        {
                            IdComentario = (byte)2,
                            IDCliente = (byte)1,
                            Mensaje = "una verga no estaba nada rica",
                            Valoracion = 2
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Producto", b =>
                {
                    b.Property<byte>("ID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("CarritoIDCarrito")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("IDVendedor")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<byte?>("VendedorID")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("ID");

                    b.HasIndex("CarritoIDCarrito");

                    b.HasIndex("VendedorID");

                    b.ToTable("Producto");

                    b.HasData(
                        new
                        {
                            ID = (byte)2,
                            Categoria = 3,
                            Descripcion = "comida para peces dorados",
                            IDVendedor = (byte)1,
                            Imagen = "imagenes de alimento",
                            Nombre = "Alimento para peces",
                            Precio = 1000,
                            Stock = 32
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Promocion", b =>
                {
                    b.Property<byte>("ID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("ProductoID")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("ID");

                    b.HasIndex("ProductoID");

                    b.ToTable("Promocion");

                    b.HasData(
                        new
                        {
                            ID = (byte)2,
                            Descripcion = "este descuento se aplica al total del producto con un descuento de 10 pesos por navidad",
                            Descuento = 10,
                            FechaFin = new DateTime(2024, 3, 17, 16, 13, 25, 152, DateTimeKind.Local).AddTicks(3042),
                            FechaInicio = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Especial navidad"
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Vendedor", b =>
                {
                    b.Property<byte>("ID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Vendedor");

                    b.HasData(
                        new
                        {
                            ID = (byte)2,
                            Contraseña = "12enPassword",
                            Email = "Josue123@gmail.com",
                            Nombre = "Josue"
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Cliente", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Carrito", "Carrito")
                        .WithMany()
                        .HasForeignKey("CarritoIDCarrito");

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Comentario", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Producto", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("ProductoID");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Producto", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Carrito", null)
                        .WithMany("Productos")
                        .HasForeignKey("CarritoIDCarrito");

                    b.HasOne("Aplicacion.Dominio.Vendedor", null)
                        .WithMany("Productos")
                        .HasForeignKey("VendedorID");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Promocion", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Producto", null)
                        .WithMany("Promociones")
                        .HasForeignKey("ProductoID");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Carrito", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Producto", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Promociones");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Vendedor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
